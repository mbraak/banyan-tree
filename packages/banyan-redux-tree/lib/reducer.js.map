{"version":3,"sources":["../src/reducer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,0CAA0C,CAAC;AAEhE,OAAO,KAAK,OAAO,MAAM,WAAW,CAAC;AAErC,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,OAAe,EAAE,EAAE,CAAC,CACvD,IAAU,EACV,MAAW,EACP,EAAE;IACN,EAAE,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACR,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,qBAAqB,IAAU,EAAE,MAAW;IAC9C,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,KAAK,OAAO,CAAC,WAAW;YACpB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAE3C,KAAK,OAAO,CAAC,WAAW;YACpB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAE3C,KAAK,OAAO,CAAC,UAAU;YACnB,MAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEhD,MAAM,CAAC,QAAQ,CAAC;QAEpB;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;YACtB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;IACT,CAAC;AACL,CAAC","file":"reducer.js","sourcesContent":["import { Tree } from \"banyan-immutable-tree/lib/immutable_tree\";\n\nimport * as actions from \"./actions\";\n\nexport const createReducerForTreeId = (tree_id: string) => (\n    tree: Tree,\n    action: any\n): Tree => {\n    if (tree_id !== action.tree_id) {\n        if (!tree) {\n            return new Tree();\n        } else {\n            return tree;\n        }\n    } else {\n        return reduceTree(tree, action);\n    }\n};\n\nexport function reduceTree(tree: Tree, action: any): Tree {\n    switch (action.type) {\n        case actions.SELECT_NODE:\n            return tree.selectNode(action.node_id);\n\n        case actions.TOGGLE_NODE:\n            return tree.toggleNode(action.node_id);\n\n        case actions.HANDLE_KEY:\n            const [, new_tree] = tree.handleKey(action.key);\n\n            return new_tree;\n\n        default:\n            if (!tree) {\n                return new Tree();\n            } else {\n                return tree;\n            }\n    }\n}\n"]}