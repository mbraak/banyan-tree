{"version":3,"sources":["../src/tree_store.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAIlC,MAAM,CAAC,OAAO;IAGV,YAAY,IAAU;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,MAAM,CAAC,IAAU;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,MAAM,CAAC,IAAU;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,SAAS,CAAC,GAAW;QACxB,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;CACJ;AAvBe;IAAX,UAAU;uCAAmB","file":"tree_store.js","sourcesContent":["import { observable } from \"mobx\";\nimport { Tree } from \"banyan-immutable-tree/lib/immutable_tree\";\nimport { Node } from \"banyan-immutable-tree/lib/immutable_node\";\n\nexport default class TreeStore {\n    @observable public tree: Tree;\n\n    constructor(tree: Tree) {\n        this.tree = tree;\n    }\n\n    public select(node: Node) {\n        this.tree = this.tree.selectNode(node.get(\"id\"));\n    }\n\n    public toggle(node: Node) {\n        this.tree = this.tree.toggleNode(node.get(\"id\"));\n    }\n\n    public handleKey(key: string): any {\n        const [is_handled, tree] = this.tree.handleKey(key);\n\n        if (is_handled) {\n            this.tree = tree;\n\n            return true;\n        }\n    }\n}\n"]}