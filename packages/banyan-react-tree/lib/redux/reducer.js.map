{"version":3,"sources":["../src/redux/reducer.ts"],"names":["reduceTree","actions","createReducerForTreeId","tree_id","tree","action","type","SELECT_NODE","selectNode","node_id","TOGGLE_NODE","toggleNode","HANDLE_KEY","handleKey","key","new_tree"],"mappings":";;;;;;;;;QAiBMA,U,GAAAA,U;;AAjBN;;IAAYC,O;;AACZ;;;;AAEO,IAAMC,0DAAyB,SAAzBA,sBAAyB,CAACC,OAAD;AAAA,WAAqB,UAACC,IAAD,EAAaC,MAAb,EAAwB;AAC/E,YAAIF,YAAYE,OAAOF,OAAvB,EAAgC;AAC5B,gBAAI,CAACC,IAAL,EAAW;AACP,uBAAO,0BAAP;AACH,aAFD,MAGK;AACD,uBAAOA,IAAP;AACH;AACJ,SAPD,MAQK;AACD,mBAAOJ,WAAWI,IAAX,EAAiBC,MAAjB,CAAP;AACH;AACJ,KAZqC;AAAA,CAA/B;AAcD,SAAAL,UAAA,CAAqBI,IAArB,EAAiCC,MAAjC,EAA4C;AAC9C,YAAQA,OAAOC,IAAf;AACI,aAAKL,QAAQM,WAAb;AACI,mBAAOH,KAAKI,UAAL,CAAgBH,OAAOI,OAAvB,CAAP;AAEJ,aAAKR,QAAQS,WAAb;AACI,mBAAON,KAAKO,UAAL,CAAgBN,OAAOI,OAAvB,CAAP;AAEJ,aAAKR,QAAQW,UAAb;AAAA,kCACyBR,KAAKS,SAAL,CAAeR,OAAOS,GAAtB,CADzB;AAAA;AAAA,gBACaC,QADb;;AAGI,mBAAOA,QAAP;AAEJ;AACI,gBAAI,CAACX,IAAL,EAAW;AACP,uBAAO,0BAAP;AACH,aAFD,MAGK;AACD,uBAAOA,IAAP;AACH;AAlBT;AAoBH","file":"reducer.js","sourcesContent":["import * as actions from \"./actions\";\nimport { Tree } from \"../immutable_tree\";\n\nexport const createReducerForTreeId = (tree_id: string) => (tree: Tree, action: any): Tree => {\n    if (tree_id !== action.tree_id) {\n        if (!tree) {\n            return new Tree();\n        }\n        else {\n            return tree;\n        }\n    }\n    else {\n        return reduceTree(tree, action);\n    }\n};\n\nexport function reduceTree(tree: Tree, action: any): Tree {\n    switch (action.type) {\n        case actions.SELECT_NODE:\n            return tree.selectNode(action.node_id);\n\n        case actions.TOGGLE_NODE:\n            return tree.toggleNode(action.node_id);\n\n        case actions.HANDLE_KEY:\n            const [, new_tree] = tree.handleKey(action.key);\n\n            return new_tree;\n\n        default:\n            if (!tree) {\n                return new Tree();\n            }\n            else {\n                return tree;\n            }\n    }\n}\n"]}