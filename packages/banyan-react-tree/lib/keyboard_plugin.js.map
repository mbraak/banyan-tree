{"version":3,"sources":["../src/keyboard_plugin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAIlC,MAAM,qBAAsB,SAAQ,MAAM;IAGtC,YAAY,WAAuB;QAC/B,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAEM,iBAAiB;QACpB,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAEM,oBAAoB;QACvB,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IAES,SAAS,CAAC,KAAoB;QACpC,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;QACtB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAErC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC;YAC7C,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;YAEpC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACb,KAAK,CAAC,cAAc,EAAE,CAAC;YAC3B,CAAC;QACL,CAAC;IACL,CAAC;IAEO,iBAAiB,CAAC,GAAW;QACjC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC;IACtD,CAAC;IAEO,UAAU,CAAC,GAAW;QAC1B,MAAM,CAAC,CACH,GAAG,KAAK,SAAS;YACjB,GAAG,KAAK,WAAW;YACnB,GAAG,KAAK,WAAW;YACnB,GAAG,KAAK,YAAY,CACvB,CAAC;IACN,CAAC;IAEO,aAAa;QACjB,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC;QAC9C,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QAErE,MAAM,CAAC,CACH,cAAc,IAAI,IAAI;YACtB,YAAY,IAAI,IAAI;YACpB,UAAU,CAAC,YAAY,EAAE,cAAqB,CAAC,CAClD,CAAC;IACN,CAAC;CACJ;AAED,oBAAoB,MAAe,EAAE,KAAkB;IACnD,IAAI,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC;IAEzC,OAAO,cAAc,EAAE,CAAC;QACpB,EAAE,CAAC,CAAC,cAAc,KAAK,MAAM,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,cAAc,GAAG,cAAc,CAAC,aAAa,CAAC;IAClD,CAAC;IAED,MAAM,CAAC,KAAK,CAAC;AACjB,CAAC","file":"keyboard_plugin.js","sourcesContent":["import { Plugin } from \"./plugin\";\n\nexport type HandleKey = (key: string) => boolean;\n\nexport class KeyboardPlugin extends Plugin {\n    private onHandleKey?: HandleKey;\n\n    constructor(onHandleKey?: HandleKey) {\n        super();\n\n        this.onHandleKey = onHandleKey;\n\n        this.handleKey = this.handleKey.bind(this);\n    }\n\n    public componentDidMount() {\n        window.addEventListener(\"keydown\", this.handleKey);\n    }\n\n    public componentWillUnmount() {\n        window.removeEventListener(\"keydown\", this.handleKey);\n    }\n\n    protected handleKey(event: KeyboardEvent) {\n        const { key } = event;\n        const onHandleKey = this.onHandleKey;\n\n        if (this.canHandleKeyboard(key) && onHandleKey) {\n            const is_handled = onHandleKey(key);\n\n            if (is_handled) {\n                event.preventDefault();\n            }\n        }\n    }\n\n    private canHandleKeyboard(key: string): boolean {\n        return this.isArrowKey(key), this.isFocusOnTree();\n    }\n\n    private isArrowKey(key: string): boolean {\n        return (\n            key === \"ArrowUp\" ||\n            key === \"ArrowDown\" ||\n            key === \"ArrowLeft\" ||\n            key === \"ArrowRight\"\n        );\n    }\n\n    private isFocusOnTree(): boolean {\n        const active_element = document.activeElement;\n        const tree_element = this.tree_proxy && this.tree_proxy.getElement();\n\n        return (\n            active_element != null &&\n            tree_element != null &&\n            isParentOf(tree_element, active_element as any)\n        );\n    }\n}\n\nfunction isParentOf(parent: Element, child: HTMLElement): boolean {\n    let current_parent = child.parentElement;\n\n    while (current_parent) {\n        if (current_parent === parent) {\n            return true;\n        }\n\n        current_parent = current_parent.parentElement;\n    }\n\n    return false;\n}\n"]}