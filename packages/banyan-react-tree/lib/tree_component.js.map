{"version":3,"sources":["../src/tree_component.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAI1B,OAAO,EAAE,iBAAiB,EAAc,MAAM,uBAAuB,CAAC;AACtE,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAYnD,MAAM,oBAAqB,SAAQ,KAAK,CAAC,SAGxC;IAKG,YAAY,KAA0B;QAClC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;QAElC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAEM,MAAM;QACT,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5B,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEpD,MAAM,oBAAoB,GAAG,GAAG,EAAE,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEtE,MAAM,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAEhE,MAAM,KAAK,GAAG;YACV,IAAI;YACJ,WAAW;YACX,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,OAAO;SACV,CAAC;QAEF,MAAM,CAAC,oBAAC,iBAAiB,oBAAK,KAAK,EAAI,CAAC;IAC5C,CAAC;IAEO,YAAY,CAAC,IAAU;QAC3B,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE5B,IAAI,CAAC,QAAQ,CAAC;YACV,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACxC,CAAC,CAAC;IACP,CAAC;IAEO,YAAY,CAAC,IAAU;QAC3B,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE5B,IAAI,CAAC,QAAQ,CAAC;YACV,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACxC,CAAC,CAAC;IACP,CAAC;IAEO,SAAS,CAAC,GAAW;QACzB,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE5B,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAEnD,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;IACL,CAAC;;AA5Da,0BAAY,GAAiC;IACvD,eAAe,EAAE,IAAI;CACxB,CAAC","file":"tree_component.js","sourcesContent":["import React from \"react\";\nimport { Tree } from \"banyan-immutable-tree/lib/immutable_tree\";\nimport { Node } from \"banyan-immutable-tree/lib/immutable_node\";\n\nimport { BaseTreeComponent, RenderNode } from \"./base_tree_component\";\nimport { KeyboardPlugin } from \"./keyboard_plugin\";\n\nexport interface ITreeComponentProps {\n    tree: Tree;\n    renderTitle?: RenderNode;\n    keyboardSupport?: boolean;\n}\n\nexport interface ITreeComponentState {\n    tree: Tree;\n}\n\nexport class TreeComponent extends React.Component<\n    ITreeComponentProps,\n    ITreeComponentState\n> {\n    public static defaultProps: Partial<ITreeComponentProps> = {\n        keyboardSupport: true\n    };\n\n    constructor(props: ITreeComponentProps) {\n        super(props);\n\n        this.state = { tree: props.tree };\n\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleKey = this.handleKey.bind(this);\n    }\n\n    public render(): JSX.Element {\n        const { tree } = this.state;\n        const { renderTitle, keyboardSupport } = this.props;\n\n        const createKeyboardPlugin = () => new KeyboardPlugin(this.handleKey);\n\n        const plugins = keyboardSupport ? [createKeyboardPlugin()] : [];\n\n        const props = {\n            tree,\n            renderTitle,\n            onToggleNode: this.handleToggle,\n            onSelectNode: this.handleSelect,\n            plugins\n        };\n\n        return <BaseTreeComponent {...props} />;\n    }\n\n    private handleToggle(node: Node) {\n        const { tree } = this.state;\n\n        this.setState({\n            tree: tree.toggleNode(node.get(\"id\"))\n        });\n    }\n\n    private handleSelect(node: Node) {\n        const { tree } = this.state;\n\n        this.setState({\n            tree: tree.selectNode(node.get(\"id\"))\n        });\n    }\n\n    private handleKey(key: string): boolean {\n        const { tree } = this.state;\n\n        const [is_handled, new_tree] = tree.handleKey(key);\n\n        if (!is_handled) {\n            return false;\n        } else {\n            this.setState({ tree: new_tree });\n            return true;\n        }\n    }\n}\n"]}